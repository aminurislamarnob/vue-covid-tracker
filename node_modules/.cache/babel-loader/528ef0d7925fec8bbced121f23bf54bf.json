{"remainingRequest":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/babel-loader/lib/index.js!/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/components/CountryData.vue?vue&type=script&lang=js","dependencies":[{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/components/CountryData.vue","mtime":1619477256000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1619105393000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/babel-loader/lib/index.js","mtime":1619105393000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1619105393000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1619105400000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ291bnRyeURhdGEnLAogIHByb3BzOiBbJ2NvdW50cmllcyddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZDogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY291bnRyeSA9IHRoaXMuY291bnRyaWVzLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5Db3VudHJ5Q29kZSA9PT0gX3RoaXMuc2VsZWN0ZWQ7CiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCdnZXQtY291bnRyeScsIGNvdW50cnkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/components/CountryData.vue"],"names":[],"mappings":";AAQA,eAAc;AACV,EAAA,IAAI,EAAE,aADI;AAEV,EAAA,KAAK,EAAE,CAAC,WAAD,CAFG;AAGV,EAAA,IAHU,kBAGJ;AACF,WAAM;AACF,MAAA,QAAO,EAAI;AADT,KAAN;AAGH,GAPS;AAQV,EAAA,OAAO,EAAE;AACL,IAAA,QADK,sBACK;AAAA;;AACN,UAAM,OAAM,GAAI,KAAK,SAAL,CAAe,IAAf,CAAoB,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,WAAL,KAAqB,KAAI,CAAC,QAApC;AAAA,OAApB,CAAhB;AACA,WAAK,KAAL,CAAW,aAAX,EAA0B,OAA1B;AACJ;AAJK;AARC,CAAd","sourcesContent":["<template>\n    <select @change=\"onChange()\" v-model=\"selected\">\n        <option value=\"\">Select Country</option>\n        <option v-for=\"country in countries\"  :value=\"country.CountryCode\" :key=\"country.CountryCode\">{{ country.Country }}</option>\n    </select>\n</template>\n\n<script>\nexport default{\n    name: 'CountryData',\n    props: ['countries'],\n    data(){\n        return{\n            selected : ''\n        }\n    },\n    methods: {\n        onChange(){\n            const country = this.countries.find((item) => item.CountryCode === this.selected);\n            this.$emit('get-country', country);\n        }\n    }\n}\n</script>\n"],"sourceRoot":""}]}