{"remainingRequest":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/views/Home.vue","mtime":1619479491000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1619105393000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/babel-loader/lib/index.js","mtime":1619105393000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1619105393000},{"path":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1619105400000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBEYXRhVGl0bGUgZnJvbSAnQC9jb21wb25lbnRzL0RhdGFUaXRsZS52dWUnCmltcG9ydCBEYXRhQm94ZXMgZnJvbSAnQC9jb21wb25lbnRzL0RhdGFCb3hlcy52dWUnCmltcG9ydCBDb3VudHJ5RGF0YSBmcm9tICdAL2NvbXBvbmVudHMvQ291bnRyeURhdGEudnVlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERhdGFUaXRsZSwKICAgIERhdGFCb3hlcywKICAgIENvdW50cnlEYXRhCiAgfSwKICBkYXRhKCl7CiAgICByZXR1cm57CiAgICAgIHRpdGxlOiAnR2xvYmFsJywKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgZGF0YURhdGU6ICcnLAogICAgICBzdGF0czoge30sCiAgICAgIGNvdW50cmllczogW10KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENvdW50cnkoY291bnRyeSl7CiAgICAgIHRoaXMudGl0bGUgPSBjb3VudHJ5LkNvdW50cnk7CiAgICAgIHRoaXMuc3RhdHMgPSBjb3VudHJ5CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgYXhpb3MKICAgICAgLmdldCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vc3VtbWFyeScgKQogICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICBjb25zdCBzdW1tYXJ5RGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgdGhpcy5kYXRhRGF0ZSA9IHN1bW1hcnlEYXRhLkRhdGU7CiAgICAgICAgdGhpcy5zdGF0cyA9IHN1bW1hcnlEYXRhLkdsb2JhbDsKICAgICAgICB0aGlzLmNvdW50cmllcyA9IHN1bW1hcnlEYXRhLkNvdW50cmllczsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSkKICB9Cn0K"},{"version":3,"sources":["/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/views/Home.vue"],"names":[],"mappings":"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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC;EACL;AACF","file":"/Volumes/Projects/Arnob/endless/vue-js/vue-projects-cli/vue-covid-tracker/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <main v-if=\"!loading\">\n    <DataTitle :text=\"title\" :dataDate=\"dataDate\"></DataTitle>\n    <DataBoxes :stats=\"stats\"></DataBoxes>\n    <CountryData @get-country=\"getCountry($event)\" :countries=\"countries\"></CountryData>\n  </main>\n\n  <main v-else>\n    <p>Loading....</p>\n  </main>\n</template>\n\n<script>\nimport axios from 'axios';\nimport DataTitle from '@/components/DataTitle.vue'\nimport DataBoxes from '@/components/DataBoxes.vue'\nimport CountryData from '@/components/CountryData.vue'\n\nexport default {\n  components: {\n    DataTitle,\n    DataBoxes,\n    CountryData\n  },\n  data(){\n    return{\n      title: 'Global',\n      loading: true,\n      dataDate: '',\n      stats: {},\n      countries: []\n    }\n  },\n  methods: {\n    getCountry(country){\n      this.title = country.Country;\n      this.stats = country\n    }\n  },\n  mounted() {\n    axios\n      .get('https://api.covid19api.com/summary' )\n      .then((response) => {\n        const summaryData = response.data;\n        this.dataDate = summaryData.Date;\n        this.stats = summaryData.Global;\n        this.countries = summaryData.Countries;\n        this.loading = false;\n      })\n  }\n}\n</script>\n"]}]}